
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;

	private global::Gtk.Action entity;

	private global::Gtk.Action relation;

	private global::Gtk.Action yes;

	private global::Gtk.Action help;

	private global::Gtk.Action @new;

	private global::Gtk.RadioAction new1;

	private global::Gtk.RadioAction help1;

	private global::Gtk.Action File;

	private global::Gtk.Action quit;

	private global::Gtk.Action commands;

	private global::Gtk.Action undo;

	private global::Gtk.Action redo;

	private global::Gtk.Action Commands;

	private global::Gtk.Action Font;

	private global::Gtk.Action Decrease;

	private global::Gtk.Action Change;

	private global::Gtk.Action SetColor;

	private global::Gtk.Action SendToBack;

	private global::Gtk.Action BringToFront;

	private global::Gtk.Action SelectAll1;

	private global::Gtk.Action Color;

	private global::Gtk.Action LineColor;

	private global::Gtk.Action FillColor;

	private global::Gtk.Action cut;

	private global::Gtk.Action copy;

	private global::Gtk.Action paste;

	private global::Gtk.Action delete;

	private global::Gtk.Action new2;

	private global::Gtk.VBox vbox1;

	private global::Gtk.MenuBar menubar1;

	private global::Gtk.Toolbar toolbar1;

	private global::Gtk.ScrolledWindow _scrolledwindow;

	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager ();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
		this.entity = new global::Gtk.Action ("entity", null, null, "entity.png");
		w1.Add (this.entity, null);
		this.relation = new global::Gtk.Action ("relation", null, null, "relation.png");
		w1.Add (this.relation, null);
		this.yes = new global::Gtk.Action ("yes", null, null, null);
		w1.Add (this.yes, null);
		this.help = new global::Gtk.Action ("help", null, null, "attribute_handle.png");
		w1.Add (this.help, null);
		this.@new = new global::Gtk.Action ("new", null, null, null);
		w1.Add (this.@new, null);
		this.new1 = new global::Gtk.RadioAction ("new1", null, null, "gtk-new", 0);
		this.new1.Group = new global::GLib.SList (global::System.IntPtr.Zero);
		w1.Add (this.new1, null);
		this.help1 = new global::Gtk.RadioAction ("help1", null, null, "gtk-help", 0);
		this.help1.Group = this.new1.Group;
		w1.Add (this.help1, null);
		this.File = new global::Gtk.Action ("File", global::Mono.Unix.Catalog.GetString ("_File"), null, null);
		this.File.ShortLabel = global::Mono.Unix.Catalog.GetString ("_File");
		w1.Add (this.File, null);
		this.quit = new global::Gtk.Action ("quit", global::Mono.Unix.Catalog.GetString ("_Quit"), null, "gtk-quit");
		this.quit.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Quit");
		w1.Add (this.quit, null);
		this.commands = new global::Gtk.Action ("commands", global::Mono.Unix.Catalog.GetString ("_Commands"), null, null);
		this.commands.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Commands");
		w1.Add (this.commands, null);
		this.undo = new global::Gtk.Action ("undo", null, null, "gtk-undo");
		w1.Add (this.undo, null);
		this.redo = new global::Gtk.Action ("redo", null, null, "gtk-redo");
		w1.Add (this.redo, null);
		this.Commands = new global::Gtk.Action ("Commands", global::Mono.Unix.Catalog.GetString ("_Commands"), null, null);
		this.Commands.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Commands");
		w1.Add (this.Commands, null);
		this.Font = new global::Gtk.Action ("Font", global::Mono.Unix.Catalog.GetString ("_Font"), null, null);
		this.Font.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Font");
		w1.Add (this.Font, null);
		this.Decrease = new global::Gtk.Action ("Decrease", global::Mono.Unix.Catalog.GetString ("_Size"), null, null);
		this.Decrease.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Size");
		w1.Add (this.Decrease, null);
		this.Change = new global::Gtk.Action ("Change", global::Mono.Unix.Catalog.GetString ("_Family"), null, null);
		this.Change.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Family");
		w1.Add (this.Change, null);
		this.SetColor = new global::Gtk.Action ("SetColor", global::Mono.Unix.Catalog.GetString ("_Color"), null, null);
		this.SetColor.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Color");
		w1.Add (this.SetColor, null);
		this.SendToBack = new global::Gtk.Action ("SendToBack", global::Mono.Unix.Catalog.GetString ("_Send to back"), null, null);
		this.SendToBack.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Send to back");
		w1.Add (this.SendToBack, null);
		this.BringToFront = new global::Gtk.Action ("BringToFront", global::Mono.Unix.Catalog.GetString ("_Bring to front"), null, null);
		this.BringToFront.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Bring to front");
		w1.Add (this.BringToFront, null);
		this.SelectAll1 = new global::Gtk.Action ("SelectAll1", global::Mono.Unix.Catalog.GetString ("Select _all"), null, null);
		this.SelectAll1.ShortLabel = global::Mono.Unix.Catalog.GetString ("Select _all");
		w1.Add (this.SelectAll1, null);
		this.Color = new global::Gtk.Action ("Color", global::Mono.Unix.Catalog.GetString ("Col_or"), null, null);
		this.Color.ShortLabel = global::Mono.Unix.Catalog.GetString ("Col_or");
		w1.Add (this.Color, null);
		this.LineColor = new global::Gtk.Action ("LineColor", global::Mono.Unix.Catalog.GetString ("_Line"), null, null);
		this.LineColor.ShortLabel = global::Mono.Unix.Catalog.GetString ("_Line");
		w1.Add (this.LineColor, null);
		this.FillColor = new global::Gtk.Action ("FillColor", global::Mono.Unix.Catalog.GetString ("F_ill"), null, null);
		this.FillColor.ShortLabel = global::Mono.Unix.Catalog.GetString ("F_ill");
		w1.Add (this.FillColor, null);
		this.cut = new global::Gtk.Action ("cut", null, null, "gtk-cut");
		w1.Add (this.cut, null);
		this.copy = new global::Gtk.Action ("copy", null, null, "gtk-copy");
		w1.Add (this.copy, null);
		this.paste = new global::Gtk.Action ("paste", null, null, "gtk-paste");
		w1.Add (this.paste, null);
		this.delete = new global::Gtk.Action ("delete", null, null, "gtk-delete");
		w1.Add (this.delete, null);
		this.new2 = new global::Gtk.Action ("new2", null, null, "gtk-new");
		w1.Add (this.new2, null);
		this.UIManager.InsertActionGroup (w1, 0);
		this.AddAccelGroup (this.UIManager.AccelGroup);
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString ("MainWindow");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.vbox1 = new global::Gtk.VBox ();
		this.vbox1.Name = "vbox1";
		this.vbox1.Spacing = 6;
		// Container child vbox1.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><menubar name='menubar1'><menu name='File' action='File'><menuitem name='quit' action='quit'/></menu><menu name='Commands' action='Commands'><menu name='Font' action='Font'><menuitem name='Decrease' action='Decrease'/><menuitem name='Change' action='Change'/><menuitem name='SetColor' action='SetColor'/></menu><separator/><menuitem name='SendToBack' action='SendToBack'/><menuitem name='BringToFront' action='BringToFront'/><menuitem name='SelectAll1' action='SelectAll1'/><separator/><menu name='Color' action='Color'><menuitem name='LineColor' action='LineColor'/><menuitem name='FillColor' action='FillColor'/></menu></menu></menubar></ui>");
		this.menubar1 = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/menubar1")));
		this.menubar1.Name = "menubar1";
		this.vbox1.Add (this.menubar1);
		global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.menubar1]));
		w2.Position = 0;
		w2.Expand = false;
		w2.Fill = false;
		// Container child vbox1.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><toolbar name='toolbar1'><toolitem name='entity' action='entity'/><toolitem name='relation' action='relation'/><toolitem name='help' action='help'/><separator/><toolitem name='undo' action='undo'/><toolitem name='redo' action='redo'/><separator/><toolitem name='cut' action='cut'/><toolitem name='copy' action='copy'/><toolitem name='paste' action='paste'/><toolitem name='delete' action='delete'/><toolitem name='new2' action='new2'/></toolbar></ui>");
		this.toolbar1 = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/toolbar1")));
		this.toolbar1.Name = "toolbar1";
		this.toolbar1.ShowArrow = false;
		this.toolbar1.ToolbarStyle = ((global::Gtk.ToolbarStyle)(0));
		this.toolbar1.IconSize = ((global::Gtk.IconSize)(3));
		this.vbox1.Add (this.toolbar1);
		global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox1[this.toolbar1]));
		w3.Position = 1;
		w3.Expand = false;
		w3.Fill = false;
		// Container child vbox1.Gtk.Box+BoxChild
		this._scrolledwindow = new global::Gtk.ScrolledWindow ();
		this._scrolledwindow.CanFocus = true;
		this._scrolledwindow.Name = "_scrolledwindow";
		this._scrolledwindow.VscrollbarPolicy = ((global::Gtk.PolicyType)(0));
		this._scrolledwindow.HscrollbarPolicy = ((global::Gtk.PolicyType)(0));
		this._scrolledwindow.ShadowType = ((global::Gtk.ShadowType)(1));
		this.vbox1.Add (this._scrolledwindow);
		global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.vbox1[this._scrolledwindow]));
		w4.Position = 2;
		this.Add (this.vbox1);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.DefaultWidth = 499;
		this.DefaultHeight = 381;
		this.Show ();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
		this.entity.Activated += new global::System.EventHandler (this.OnEntityActivated);
		this.relation.Activated += new global::System.EventHandler (this.OnRelationActivated);
		this.yes.Activated += new global::System.EventHandler (this.OnRelationActivated);
		this.help.Activated += new global::System.EventHandler (this.OnAttributeActivated);
		this.quit.Activated += new global::System.EventHandler (this.OnQuitActivated);
		this.undo.Activated += new global::System.EventHandler (this.OnUndoActivated);
		this.redo.Activated += new global::System.EventHandler (this.OnRedoActivated);
		this.Decrease.Activated += new global::System.EventHandler (this.OnCommandFontSize);
		this.Change.Activated += new global::System.EventHandler (this.OnCommandFontFamily);
		this.SetColor.Activated += new global::System.EventHandler (this.OnCommandFontColor);
		this.SendToBack.Activated += new global::System.EventHandler (this.OnCommandSendToBack);
		this.BringToFront.Activated += new global::System.EventHandler (this.OnCommandBringToFront);
		this.SelectAll1.Activated += new global::System.EventHandler (this.OnCommandSelectAll);
		this.LineColor.Activated += new global::System.EventHandler (this.OnColorLine);
		this.FillColor.Activated += new global::System.EventHandler (this.OnColorFill);
		this.cut.Activated += new global::System.EventHandler (this.OnCutActivated);
		this.copy.Activated += new global::System.EventHandler (this.OnCopyActivated);
		this.paste.Activated += new global::System.EventHandler (this.OnPasteActivated);
		this.delete.Activated += new global::System.EventHandler (this.OnDeleteActivated);
		this.new2.Activated += new global::System.EventHandler (this.OnDuplicateActivated);
	}
}
