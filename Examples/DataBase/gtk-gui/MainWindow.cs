// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------



public partial class MainWindow {
    
    private Gtk.UIManager UIManager;
    
    private Gtk.Action entity;
    
    private Gtk.Action relation;
    
    private Gtk.Action yes;
    
    private Gtk.Action help;
    
    private Gtk.Action @new;
    
    private Gtk.RadioAction new1;
    
    private Gtk.RadioAction help1;
    
    private Gtk.Action File;
    
    private Gtk.Action quit;
    
    private Gtk.Action commands;
    
    private Gtk.Action undo;
    
    private Gtk.Action redo;
    
    private Gtk.Action Commands;
    
    private Gtk.Action Font;
    
    private Gtk.Action Decrease;
    
    private Gtk.Action Change;
    
    private Gtk.Action SetColor;
    
    private Gtk.Action SendToBack;
    
    private Gtk.Action BringToFront;
    
    private Gtk.Action SelectAll1;
    
    private Gtk.Action Color;
    
    private Gtk.Action LineColor;
    
    private Gtk.Action FillColor;
    
    private Gtk.Action cut;
    
    private Gtk.Action copy;
    
    private Gtk.Action paste;
    
    private Gtk.Action delete;
    
    private Gtk.Action new2;
    
    private Gtk.VBox vbox1;
    
    private Gtk.MenuBar menubar1;
    
    private Gtk.Toolbar toolbar1;
    
    private Gtk.ScrolledWindow _scrolledwindow;
    
    protected virtual void Build() {
        Stetic.Gui.Initialize(this);
        // Widget MainWindow
        this.UIManager = new Gtk.UIManager();
        Gtk.ActionGroup w1 = new Gtk.ActionGroup("Default");
        this.entity = new Gtk.Action("entity", null, null, "entity.png");
        w1.Add(this.entity, null);
        this.relation = new Gtk.Action("relation", null, null, "relation.png");
        w1.Add(this.relation, null);
        this.yes = new Gtk.Action("yes", null, null, null);
        w1.Add(this.yes, null);
        this.help = new Gtk.Action("help", null, null, "attribute_handle.png");
        w1.Add(this.help, null);
        this.@new = new Gtk.Action("new", null, null, null);
        w1.Add(this.@new, null);
        this.new1 = new Gtk.RadioAction("new1", null, null, "gtk-new", 0);
        this.new1.Group = new GLib.SList(System.IntPtr.Zero);
        w1.Add(this.new1, null);
        this.help1 = new Gtk.RadioAction("help1", null, null, "gtk-help", 0);
        this.help1.Group = this.new1.Group;
        w1.Add(this.help1, null);
        this.File = new Gtk.Action("File", Mono.Unix.Catalog.GetString("_File"), null, null);
        this.File.ShortLabel = Mono.Unix.Catalog.GetString("_File");
        w1.Add(this.File, null);
        this.quit = new Gtk.Action("quit", Mono.Unix.Catalog.GetString("_Quit"), null, "gtk-quit");
        this.quit.ShortLabel = Mono.Unix.Catalog.GetString("_Quit");
        w1.Add(this.quit, null);
        this.commands = new Gtk.Action("commands", Mono.Unix.Catalog.GetString("_Commands"), null, null);
        this.commands.ShortLabel = Mono.Unix.Catalog.GetString("_Commands");
        w1.Add(this.commands, null);
        this.undo = new Gtk.Action("undo", null, null, "gtk-undo");
        w1.Add(this.undo, null);
        this.redo = new Gtk.Action("redo", null, null, "gtk-redo");
        w1.Add(this.redo, null);
        this.Commands = new Gtk.Action("Commands", Mono.Unix.Catalog.GetString("_Commands"), null, null);
        this.Commands.ShortLabel = Mono.Unix.Catalog.GetString("_Commands");
        w1.Add(this.Commands, null);
        this.Font = new Gtk.Action("Font", Mono.Unix.Catalog.GetString("_Font"), null, null);
        this.Font.ShortLabel = Mono.Unix.Catalog.GetString("_Font");
        w1.Add(this.Font, null);
        this.Decrease = new Gtk.Action("Decrease", Mono.Unix.Catalog.GetString("_Size"), null, null);
        this.Decrease.ShortLabel = Mono.Unix.Catalog.GetString("_Size");
        w1.Add(this.Decrease, null);
        this.Change = new Gtk.Action("Change", Mono.Unix.Catalog.GetString("_Family"), null, null);
        this.Change.ShortLabel = Mono.Unix.Catalog.GetString("_Family");
        w1.Add(this.Change, null);
        this.SetColor = new Gtk.Action("SetColor", Mono.Unix.Catalog.GetString("_Color"), null, null);
        this.SetColor.ShortLabel = Mono.Unix.Catalog.GetString("_Color");
        w1.Add(this.SetColor, null);
        this.SendToBack = new Gtk.Action("SendToBack", Mono.Unix.Catalog.GetString("_Send to back"), null, null);
        this.SendToBack.ShortLabel = Mono.Unix.Catalog.GetString("_Send to back");
        w1.Add(this.SendToBack, null);
        this.BringToFront = new Gtk.Action("BringToFront", Mono.Unix.Catalog.GetString("_Bring to front"), null, null);
        this.BringToFront.ShortLabel = Mono.Unix.Catalog.GetString("_Bring to front");
        w1.Add(this.BringToFront, null);
        this.SelectAll1 = new Gtk.Action("SelectAll1", Mono.Unix.Catalog.GetString("Select _all"), null, null);
        this.SelectAll1.ShortLabel = Mono.Unix.Catalog.GetString("Select _all");
        w1.Add(this.SelectAll1, null);
        this.Color = new Gtk.Action("Color", Mono.Unix.Catalog.GetString("Col_or"), null, null);
        this.Color.ShortLabel = Mono.Unix.Catalog.GetString("Col_or");
        w1.Add(this.Color, null);
        this.LineColor = new Gtk.Action("LineColor", Mono.Unix.Catalog.GetString("_Line"), null, null);
        this.LineColor.ShortLabel = Mono.Unix.Catalog.GetString("_Line");
        w1.Add(this.LineColor, null);
        this.FillColor = new Gtk.Action("FillColor", Mono.Unix.Catalog.GetString("F_ill"), null, null);
        this.FillColor.ShortLabel = Mono.Unix.Catalog.GetString("F_ill");
        w1.Add(this.FillColor, null);
        this.cut = new Gtk.Action("cut", null, null, "gtk-cut");
        w1.Add(this.cut, null);
        this.copy = new Gtk.Action("copy", null, null, "gtk-copy");
        w1.Add(this.copy, null);
        this.paste = new Gtk.Action("paste", null, null, "gtk-paste");
        w1.Add(this.paste, null);
        this.delete = new Gtk.Action("delete", null, null, "gtk-delete");
        w1.Add(this.delete, null);
        this.new2 = new Gtk.Action("new2", null, null, "gtk-new");
        w1.Add(this.new2, null);
        this.UIManager.InsertActionGroup(w1, 0);
        this.AddAccelGroup(this.UIManager.AccelGroup);
        this.Name = "MainWindow";
        this.Title = Mono.Unix.Catalog.GetString("MainWindow");
        this.WindowPosition = ((Gtk.WindowPosition)(4));
        // Container child MainWindow.Gtk.Container+ContainerChild
        this.vbox1 = new Gtk.VBox();
        this.vbox1.Name = "vbox1";
        this.vbox1.Spacing = 6;
        // Container child vbox1.Gtk.Box+BoxChild
        this.UIManager.AddUiFromString("<ui><menubar name='menubar1'><menu name='File' action='File'><menuitem name='quit' action='quit'/></menu><menu name='Commands' action='Commands'><menu name='Font' action='Font'><menuitem name='Decrease' action='Decrease'/><menuitem name='Change' action='Change'/><menuitem name='SetColor' action='SetColor'/></menu><separator/><menuitem name='SendToBack' action='SendToBack'/><menuitem name='BringToFront' action='BringToFront'/><menuitem name='SelectAll1' action='SelectAll1'/><separator/><menu name='Color' action='Color'><menuitem name='LineColor' action='LineColor'/><menuitem name='FillColor' action='FillColor'/></menu></menu></menubar></ui>");
        this.menubar1 = ((Gtk.MenuBar)(this.UIManager.GetWidget("/menubar1")));
        this.menubar1.Name = "menubar1";
        this.vbox1.Add(this.menubar1);
        Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.vbox1[this.menubar1]));
        w2.Position = 0;
        w2.Expand = false;
        w2.Fill = false;
        // Container child vbox1.Gtk.Box+BoxChild
        this.UIManager.AddUiFromString("<ui><toolbar name='toolbar1'><toolitem name='entity' action='entity'/><toolitem name='relation' action='relation'/><toolitem name='help' action='help'/><separator/><toolitem name='undo' action='undo'/><toolitem name='redo' action='redo'/><separator/><toolitem name='cut' action='cut'/><toolitem name='copy' action='copy'/><toolitem name='paste' action='paste'/><toolitem name='delete' action='delete'/><toolitem name='new2' action='new2'/></toolbar></ui>");
        this.toolbar1 = ((Gtk.Toolbar)(this.UIManager.GetWidget("/toolbar1")));
        this.toolbar1.Name = "toolbar1";
        this.toolbar1.ShowArrow = false;
        this.toolbar1.ToolbarStyle = ((Gtk.ToolbarStyle)(0));
        this.toolbar1.IconSize = ((Gtk.IconSize)(3));
        this.vbox1.Add(this.toolbar1);
        Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox1[this.toolbar1]));
        w3.Position = 1;
        w3.Expand = false;
        w3.Fill = false;
        // Container child vbox1.Gtk.Box+BoxChild
        this._scrolledwindow = new Gtk.ScrolledWindow();
        this._scrolledwindow.CanFocus = true;
        this._scrolledwindow.Name = "_scrolledwindow";
        this._scrolledwindow.VscrollbarPolicy = ((Gtk.PolicyType)(0));
        this._scrolledwindow.HscrollbarPolicy = ((Gtk.PolicyType)(0));
        this._scrolledwindow.ShadowType = ((Gtk.ShadowType)(1));
        this.vbox1.Add(this._scrolledwindow);
        Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.vbox1[this._scrolledwindow]));
        w4.Position = 2;
        this.Add(this.vbox1);
        if ((this.Child != null)) {
            this.Child.ShowAll();
        }
        this.DefaultWidth = 499;
        this.DefaultHeight = 381;
        this.Show();
        this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteEvent);
        this.entity.Activated += new System.EventHandler(this.OnEntityActivated);
        this.relation.Activated += new System.EventHandler(this.OnRelationActivated);
        this.yes.Activated += new System.EventHandler(this.OnRelationActivated);
        this.help.Activated += new System.EventHandler(this.OnAttributeActivated);
        this.quit.Activated += new System.EventHandler(this.OnQuitActivated);
        this.undo.Activated += new System.EventHandler(this.OnUndoActivated);
        this.redo.Activated += new System.EventHandler(this.OnRedoActivated);
        this.Decrease.Activated += new System.EventHandler(this.OnCommandFontSize);
        this.Change.Activated += new System.EventHandler(this.OnCommandFontFamily);
        this.SetColor.Activated += new System.EventHandler(this.OnCommandFontColor);
        this.SendToBack.Activated += new System.EventHandler(this.OnCommandSendToBack);
        this.BringToFront.Activated += new System.EventHandler(this.OnCommandBringToFront);
        this.SelectAll1.Activated += new System.EventHandler(this.OnCommandSelectAll);
        this.LineColor.Activated += new System.EventHandler(this.OnColorLine);
        this.FillColor.Activated += new System.EventHandler(this.OnColorFill);
        this.cut.Activated += new System.EventHandler(this.OnCutActivated);
        this.copy.Activated += new System.EventHandler(this.OnCopyActivated);
        this.paste.Activated += new System.EventHandler(this.OnPasteActivated);
        this.delete.Activated += new System.EventHandler(this.OnDeleteActivated);
        this.new2.Activated += new System.EventHandler(this.OnDuplicateActivated);
    }
}
