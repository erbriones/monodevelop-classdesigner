// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------



public partial class MainWindow {
    
    private Gtk.UIManager UIManager;
    
    private Gtk.Action FiguresAction;
    
    private Gtk.Action AddClassAction;
    
    private Gtk.Action EditAction;
    
    private Gtk.Action UndoAction;
    
    private Gtk.Action RedoAction;
    
    private Gtk.VBox vbox2;
    
    private Gtk.MenuBar menubar1;
    
    private Gtk.Toolbar toolbar1;
    
    private MonoHotDraw.SteticComponent mhdcanvas;
    
    protected virtual void Build() {
        Stetic.Gui.Initialize(this);
        // Widget MainWindow
        this.UIManager = new Gtk.UIManager();
        Gtk.ActionGroup w1 = new Gtk.ActionGroup("Default");
        this.FiguresAction = new Gtk.Action("FiguresAction", Mono.Unix.Catalog.GetString("Figures"), null, null);
        this.FiguresAction.ShortLabel = Mono.Unix.Catalog.GetString("Figures");
        w1.Add(this.FiguresAction, null);
        this.AddClassAction = new Gtk.Action("AddClassAction", Mono.Unix.Catalog.GetString("Add Class"), null, null);
        this.AddClassAction.ShortLabel = Mono.Unix.Catalog.GetString("Add Class");
        w1.Add(this.AddClassAction, null);
        this.EditAction = new Gtk.Action("EditAction", Mono.Unix.Catalog.GetString("Edit"), null, null);
        this.EditAction.ShortLabel = Mono.Unix.Catalog.GetString("Edit");
        w1.Add(this.EditAction, null);
        this.UndoAction = new Gtk.Action("UndoAction", Mono.Unix.Catalog.GetString("_Deshacer"), null, "gtk-undo");
        this.UndoAction.ShortLabel = Mono.Unix.Catalog.GetString("_Deshacer");
        w1.Add(this.UndoAction, null);
        this.RedoAction = new Gtk.Action("RedoAction", Mono.Unix.Catalog.GetString("_Rehacer"), null, "gtk-redo");
        this.RedoAction.ShortLabel = Mono.Unix.Catalog.GetString("_Rehacer");
        w1.Add(this.RedoAction, null);
        this.UIManager.InsertActionGroup(w1, 0);
        this.AddAccelGroup(this.UIManager.AccelGroup);
        this.Name = "MainWindow";
        this.Title = Mono.Unix.Catalog.GetString("MainWindow");
        this.WindowPosition = ((Gtk.WindowPosition)(4));
        // Container child MainWindow.Gtk.Container+ContainerChild
        this.vbox2 = new Gtk.VBox();
        this.vbox2.Name = "vbox2";
        this.vbox2.Spacing = 6;
        // Container child vbox2.Gtk.Box+BoxChild
        this.UIManager.AddUiFromString("<ui><menubar name='menubar1'><menu name='FiguresAction' action='FiguresAction'><menuitem name='AddClassAction' action='AddClassAction'/></menu><menu name='EditAction' action='EditAction'><menuitem name='UndoAction' action='UndoAction'/><menuitem name='RedoAction' action='RedoAction'/></menu></menubar></ui>");
        this.menubar1 = ((Gtk.MenuBar)(this.UIManager.GetWidget("/menubar1")));
        this.menubar1.Name = "menubar1";
        this.vbox2.Add(this.menubar1);
        Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.vbox2[this.menubar1]));
        w2.Position = 0;
        w2.Expand = false;
        w2.Fill = false;
        // Container child vbox2.Gtk.Box+BoxChild
        this.UIManager.AddUiFromString("<ui><toolbar name='toolbar1'/></ui>");
        this.toolbar1 = ((Gtk.Toolbar)(this.UIManager.GetWidget("/toolbar1")));
        this.toolbar1.Name = "toolbar1";
        this.toolbar1.ShowArrow = false;
        this.toolbar1.ToolbarStyle = ((Gtk.ToolbarStyle)(0));
        this.toolbar1.IconSize = ((Gtk.IconSize)(3));
        this.vbox2.Add(this.toolbar1);
        Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox2[this.toolbar1]));
        w3.Position = 1;
        w3.Expand = false;
        w3.Fill = false;
        // Container child vbox2.Gtk.Box+BoxChild
        this.mhdcanvas = new MonoHotDraw.SteticComponent();
        this.mhdcanvas.Events = ((Gdk.EventMask)(256));
        this.mhdcanvas.Name = "mhdcanvas";
        this.vbox2.Add(this.mhdcanvas);
        Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.vbox2[this.mhdcanvas]));
        w4.Position = 2;
        this.Add(this.vbox2);
        if ((this.Child != null)) {
            this.Child.ShowAll();
        }
        this.DefaultWidth = 446;
        this.DefaultHeight = 300;
        this.Show();
        this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteEvent);
        this.AddClassAction.Activated += new System.EventHandler(this.OnAddClassActionActivated);
        this.UndoAction.Activated += new System.EventHandler(this.OnUndoActionActivated);
        this.RedoAction.Activated += new System.EventHandler(this.OnRedoActionActivated);
    }
}
